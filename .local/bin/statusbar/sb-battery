#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding

# load colors!
background=$(xrdb -query | grep '*background:'| awk '{print $NF}')
color3=$(xrdb -query | grep '*color3:'| awk '{print $NF}')
color1=$(xrdb -query | grep '*color1:'| awk '{print $NF}')
color4=$(xrdb -query | grep '*color4:'| awk '{print $NF}')
color5=$(xrdb -query | grep '*color5:'| awk '{print $NF}')
color2=$(xrdb -query | grep '*color2:'| awk '{print $NF}')

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
    BAT="$(basename "$battery")"
	# Sets up the status and capacity
	capacity="$(cat "$battery/capacity" 2>&1)"
	case "$(cat "$battery/status" 2>&1)" in
		"Full")
            ;;
		"Discharging")
            warn=1
            if [ "$capacity" -le 10 ]; then
                warn=2
            fi
            ;;
		"Charging")
            warn=0
            ;;
		"Not charging")
            warn=3
            if [ "$capacity" -le 10 ]; then
                warn=2
            fi
            ;;
		"Unknown")
            warn=4
            ;;
		*) exit 1 ;;
	esac
	# Will make a warn variable if discharging and low
    ([ "$warn" -eq 0 ] && ( printf "^c$background^^b$color3^ %s " "$BAT"; printf "^d^^c$color3^ %d%%" "$capacity" )) \
        || ([ "$warn" -eq 1 ] && ( printf "^c$background^^b$color1^ %s " "$BAT"; printf "^d^^c$color1^ %d%%" "$capacity" )) \
            || ([ "$warn" -eq 2 ] && ( printf "^c$background^^b$color1^ %s " "$BAT"; printf "^d^^c$color1^ %d%%" "$capacity" )) \
                || ([ "$warn" -eq 3 ] && ( printf "^c$background^^b$color4^ %s " "$BAT"; printf "^d^^c$color4^ %d%%" "$capacity" )) \
                    || ([ "$warn" -eq 4 ] && ( printf "^c$background^^b$color5^ %s " "$BAT"; printf "^d^^c$color5^ %d%%" "$capacity" )) \
                        ||  ( printf " ^c$background^^b$color2^ %s " "$BAT"; printf "^d^^c$color2^ %d%%" "$capacity" )
    unset warn
done && printf "^d^\n"
